{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMPjmHY1hNBhhsO2BfYTWjG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TW4hGeFqsP16","executionInfo":{"status":"ok","timestamp":1714810975266,"user_tz":-330,"elapsed":369,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"baca1c69-3a5e-43e3-c673-93743de3670f"},"outputs":[{"output_type":"stream","name":"stdout","text":["     Age  Gender  Total_Bilirubin  Direct_Bilirubin  Alkaline_Phosphotase  \\\n","0     65  Female              0.7               0.1                   187   \n","1     62    Male             10.9               5.5                   699   \n","2     62    Male              7.3               4.1                   490   \n","3     58    Male              1.0               0.4                   182   \n","4     72    Male              3.9               2.0                   195   \n","..   ...     ...              ...               ...                   ...   \n","578   60    Male              0.5               0.1                   500   \n","579   40    Male              0.6               0.1                    98   \n","580   52    Male              0.8               0.2                   245   \n","581   31    Male              1.3               0.5                   184   \n","582   38    Male              1.0               0.3                   216   \n","\n","     Alamine_Aminotransferase  Aspartate_Aminotransferase  Total_Protiens  \\\n","0                          16                          18             6.8   \n","1                          64                         100             7.5   \n","2                          60                          68             7.0   \n","3                          14                          20             6.8   \n","4                          27                          59             7.3   \n","..                        ...                         ...             ...   \n","578                        20                          34             5.9   \n","579                        35                          31             6.0   \n","580                        48                          49             6.4   \n","581                        29                          32             6.8   \n","582                        21                          24             7.3   \n","\n","     Albumin  Albumin_and_Globulin_Ratio  Dataset  \n","0        3.3                        0.90        1  \n","1        3.2                        0.74        1  \n","2        3.3                        0.89        1  \n","3        3.4                        1.00        1  \n","4        2.4                        0.40        1  \n","..       ...                         ...      ...  \n","578      1.6                        0.37        2  \n","579      3.2                        1.10        1  \n","580      3.2                        1.00        1  \n","581      3.4                        1.00        1  \n","582      4.4                        1.50        2  \n","\n","[583 rows x 11 columns]\n"]}],"source":["df= pd.read_csv('liverdataset.csv')\n","print(df)"]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import accuracy_score,precision_score\n","from sklearn.metrics import mean_squared_error\n","from sklearn.metrics import r2_score\n","import pickle"],"metadata":{"id":"Jzy_HOQlsqVq","executionInfo":{"status":"ok","timestamp":1714810971916,"user_tz":-330,"elapsed":3398,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","print(df.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JtxEc_9cs8Oe","executionInfo":{"status":"ok","timestamp":1714811032592,"user_tz":-330,"elapsed":376,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"d2df8357-32e9-42c8-8f93-f2ce0783680d"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["(583, 11)\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S6t6mAVxs-kd","executionInfo":{"status":"ok","timestamp":1714811069267,"user_tz":-330,"elapsed":392,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"227b80ba-f2d3-493a-bd8d-cb18a42496e2"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 583 entries, 0 to 582\n","Data columns (total 11 columns):\n"," #   Column                      Non-Null Count  Dtype  \n","---  ------                      --------------  -----  \n"," 0   Age                         583 non-null    int64  \n"," 1   Gender                      583 non-null    object \n"," 2   Total_Bilirubin             583 non-null    float64\n"," 3   Direct_Bilirubin            583 non-null    float64\n"," 4   Alkaline_Phosphotase        583 non-null    int64  \n"," 5   Alamine_Aminotransferase    583 non-null    int64  \n"," 6   Aspartate_Aminotransferase  583 non-null    int64  \n"," 7   Total_Protiens              583 non-null    float64\n"," 8   Albumin                     583 non-null    float64\n"," 9   Albumin_and_Globulin_Ratio  579 non-null    float64\n"," 10  Dataset                     583 non-null    int64  \n","dtypes: float64(5), int64(5), object(1)\n","memory usage: 50.2+ KB\n"]}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FDYqkoP8tJMB","executionInfo":{"status":"ok","timestamp":1714811140462,"user_tz":-330,"elapsed":397,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"a49ab76e-08ad-47ac-dc27-f21e939e0daa"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age                           0\n","Gender                        0\n","Total_Bilirubin               0\n","Direct_Bilirubin              0\n","Alkaline_Phosphotase          0\n","Alamine_Aminotransferase      0\n","Aspartate_Aminotransferase    0\n","Total_Protiens                0\n","Albumin                       0\n","Albumin_and_Globulin_Ratio    4\n","Dataset                       0\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df=df.dropna()"],"metadata":{"id":"Tohao-3Etahq","executionInfo":{"status":"ok","timestamp":1714811172691,"user_tz":-330,"elapsed":378,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQ0O6BTltnGD","executionInfo":{"status":"ok","timestamp":1714811208063,"user_tz":-330,"elapsed":384,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"4b874a03-0525-4445-e615-54a848e95cbd"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age                           0\n","Gender                        0\n","Total_Bilirubin               0\n","Direct_Bilirubin              0\n","Alkaline_Phosphotase          0\n","Alamine_Aminotransferase      0\n","Aspartate_Aminotransferase    0\n","Total_Protiens                0\n","Albumin                       0\n","Albumin_and_Globulin_Ratio    0\n","Dataset                       0\n","dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df=df.dropna()"],"metadata":{"id":"3gWXQNP7uENe","executionInfo":{"status":"ok","timestamp":1714811339736,"user_tz":-330,"elapsed":353,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hNcrcKgVuQeF","executionInfo":{"status":"ok","timestamp":1714811421842,"user_tz":-330,"elapsed":472,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"d981aa32-dc93-4ac3-8f7e-5195b5ce53f3"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age                           0\n","Gender                        0\n","Total_Bilirubin               0\n","Direct_Bilirubin              0\n","Alkaline_Phosphotase          0\n","Alamine_Aminotransferase      0\n","Aspartate_Aminotransferase    0\n","Total_Protiens                0\n","Albumin                       0\n","Albumin_and_Globulin_Ratio    0\n","Dataset                       0\n","dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xsJnPwuduiU9","executionInfo":{"status":"ok","timestamp":1714811449536,"user_tz":-330,"elapsed":340,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"7ac0c620-455d-4956-e3d9-9793d8604fc5"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cCNYvytXvJxe","executionInfo":{"status":"ok","timestamp":1714811611726,"user_tz":-330,"elapsed":613,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"7399e904-ac0a-44dc-dc2b-3638fb1ccc55"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1u9de3SZvMcC","executionInfo":{"status":"ok","timestamp":1714811643681,"user_tz":-330,"elapsed":470,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"2d5099be-5cc8-402e-fe7a-d0a4bff92b78"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"0kbrY1s9vVq8","executionInfo":{"status":"ok","timestamp":1714811661371,"user_tz":-330,"elapsed":422,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"b94b6f87-c301-4ed2-b782-ef7648693ea7"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Age  Gender  Total_Bilirubin  Direct_Bilirubin  Alkaline_Phosphotase  \\\n","0     65  Female              0.7               0.1                   187   \n","1     62    Male             10.9               5.5                   699   \n","2     62    Male              7.3               4.1                   490   \n","3     58    Male              1.0               0.4                   182   \n","4     72    Male              3.9               2.0                   195   \n","..   ...     ...              ...               ...                   ...   \n","578   60    Male              0.5               0.1                   500   \n","579   40    Male              0.6               0.1                    98   \n","580   52    Male              0.8               0.2                   245   \n","581   31    Male              1.3               0.5                   184   \n","582   38    Male              1.0               0.3                   216   \n","\n","     Alamine_Aminotransferase  Aspartate_Aminotransferase  Total_Protiens  \\\n","0                          16                          18             6.8   \n","1                          64                         100             7.5   \n","2                          60                          68             7.0   \n","3                          14                          20             6.8   \n","4                          27                          59             7.3   \n","..                        ...                         ...             ...   \n","578                        20                          34             5.9   \n","579                        35                          31             6.0   \n","580                        48                          49             6.4   \n","581                        29                          32             6.8   \n","582                        21                          24             7.3   \n","\n","     Albumin  Albumin_and_Globulin_Ratio  Dataset  \n","0        3.3                        0.90        1  \n","1        3.2                        0.74        1  \n","2        3.3                        0.89        1  \n","3        3.4                        1.00        1  \n","4        2.4                        0.40        1  \n","..       ...                         ...      ...  \n","578      1.6                        0.37        2  \n","579      3.2                        1.10        1  \n","580      3.2                        1.00        1  \n","581      3.4                        1.00        1  \n","582      4.4                        1.50        2  \n","\n","[579 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-f580353d-cdc0-4b8a-bc39-2ae15c3e494a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Total_Bilirubin</th>\n","      <th>Direct_Bilirubin</th>\n","      <th>Alkaline_Phosphotase</th>\n","      <th>Alamine_Aminotransferase</th>\n","      <th>Aspartate_Aminotransferase</th>\n","      <th>Total_Protiens</th>\n","      <th>Albumin</th>\n","      <th>Albumin_and_Globulin_Ratio</th>\n","      <th>Dataset</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>65</td>\n","      <td>Female</td>\n","      <td>0.7</td>\n","      <td>0.1</td>\n","      <td>187</td>\n","      <td>16</td>\n","      <td>18</td>\n","      <td>6.8</td>\n","      <td>3.3</td>\n","      <td>0.90</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>62</td>\n","      <td>Male</td>\n","      <td>10.9</td>\n","      <td>5.5</td>\n","      <td>699</td>\n","      <td>64</td>\n","      <td>100</td>\n","      <td>7.5</td>\n","      <td>3.2</td>\n","      <td>0.74</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>Male</td>\n","      <td>7.3</td>\n","      <td>4.1</td>\n","      <td>490</td>\n","      <td>60</td>\n","      <td>68</td>\n","      <td>7.0</td>\n","      <td>3.3</td>\n","      <td>0.89</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>58</td>\n","      <td>Male</td>\n","      <td>1.0</td>\n","      <td>0.4</td>\n","      <td>182</td>\n","      <td>14</td>\n","      <td>20</td>\n","      <td>6.8</td>\n","      <td>3.4</td>\n","      <td>1.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>72</td>\n","      <td>Male</td>\n","      <td>3.9</td>\n","      <td>2.0</td>\n","      <td>195</td>\n","      <td>27</td>\n","      <td>59</td>\n","      <td>7.3</td>\n","      <td>2.4</td>\n","      <td>0.40</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>578</th>\n","      <td>60</td>\n","      <td>Male</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>500</td>\n","      <td>20</td>\n","      <td>34</td>\n","      <td>5.9</td>\n","      <td>1.6</td>\n","      <td>0.37</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>579</th>\n","      <td>40</td>\n","      <td>Male</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>98</td>\n","      <td>35</td>\n","      <td>31</td>\n","      <td>6.0</td>\n","      <td>3.2</td>\n","      <td>1.10</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>580</th>\n","      <td>52</td>\n","      <td>Male</td>\n","      <td>0.8</td>\n","      <td>0.2</td>\n","      <td>245</td>\n","      <td>48</td>\n","      <td>49</td>\n","      <td>6.4</td>\n","      <td>3.2</td>\n","      <td>1.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>581</th>\n","      <td>31</td>\n","      <td>Male</td>\n","      <td>1.3</td>\n","      <td>0.5</td>\n","      <td>184</td>\n","      <td>29</td>\n","      <td>32</td>\n","      <td>6.8</td>\n","      <td>3.4</td>\n","      <td>1.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>582</th>\n","      <td>38</td>\n","      <td>Male</td>\n","      <td>1.0</td>\n","      <td>0.3</td>\n","      <td>216</td>\n","      <td>21</td>\n","      <td>24</td>\n","      <td>7.3</td>\n","      <td>4.4</td>\n","      <td>1.50</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>579 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f580353d-cdc0-4b8a-bc39-2ae15c3e494a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f580353d-cdc0-4b8a-bc39-2ae15c3e494a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f580353d-cdc0-4b8a-bc39-2ae15c3e494a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-41b36750-cc9f-45ea-a8d1-1aa1f485c8f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41b36750-cc9f-45ea-a8d1-1aa1f485c8f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-41b36750-cc9f-45ea-a8d1-1aa1f485c8f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c3bdc893-7812-4ab2-9e5a-feff68d411cb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c3bdc893-7812-4ab2-9e5a-feff68d411cb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 579,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 4,\n        \"max\": 90,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          46,\n          23,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Bilirubin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.227716426969643,\n        \"min\": 0.4,\n        \"max\": 75.0,\n        \"num_unique_values\": 113,\n        \"samples\": [\n          4.9,\n          3.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Direct_Bilirubin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8164986099097193,\n        \"min\": 0.1,\n        \"max\": 19.7,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          6.2,\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alkaline_Phosphotase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243,\n        \"min\": 63,\n        \"max\": 2110,\n        \"num_unique_values\": 262,\n        \"samples\": [\n          768,\n          1550\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alamine_Aminotransferase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 183,\n        \"min\": 10,\n        \"max\": 2000,\n        \"num_unique_values\": 152,\n        \"samples\": [\n          2000,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Aspartate_Aminotransferase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 289,\n        \"min\": 10,\n        \"max\": 4929,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          66,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Protiens\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0846410766640568,\n        \"min\": 2.7,\n        \"max\": 9.6,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          6.8,\n          6.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Albumin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7944347108052413,\n        \"min\": 0.9,\n        \"max\": 5.5,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          2.0,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Albumin_and_Globulin_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3195921076723706,\n        \"min\": 0.3,\n        \"max\": 2.8,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          1.6,\n          0.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df.replace({'Male':0, 'Female':1}, inplace=True)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"KxN72UJ3vdOC","executionInfo":{"status":"ok","timestamp":1714811692179,"user_tz":-330,"elapsed":462,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"78635316-1fa1-4d39-88dc-18330f65358f"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  Gender  Total_Bilirubin  Direct_Bilirubin  Alkaline_Phosphotase  \\\n","0   65       1              0.7               0.1                   187   \n","1   62       0             10.9               5.5                   699   \n","2   62       0              7.3               4.1                   490   \n","3   58       0              1.0               0.4                   182   \n","4   72       0              3.9               2.0                   195   \n","\n","   Alamine_Aminotransferase  Aspartate_Aminotransferase  Total_Protiens  \\\n","0                        16                          18             6.8   \n","1                        64                         100             7.5   \n","2                        60                          68             7.0   \n","3                        14                          20             6.8   \n","4                        27                          59             7.3   \n","\n","   Albumin  Albumin_and_Globulin_Ratio  Dataset  \n","0      3.3                        0.90        1  \n","1      3.2                        0.74        1  \n","2      3.3                        0.89        1  \n","3      3.4                        1.00        1  \n","4      2.4                        0.40        1  "],"text/html":["\n","  <div id=\"df-1c1c3e07-81a4-414e-bd16-93b9b6ed8ef7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Total_Bilirubin</th>\n","      <th>Direct_Bilirubin</th>\n","      <th>Alkaline_Phosphotase</th>\n","      <th>Alamine_Aminotransferase</th>\n","      <th>Aspartate_Aminotransferase</th>\n","      <th>Total_Protiens</th>\n","      <th>Albumin</th>\n","      <th>Albumin_and_Globulin_Ratio</th>\n","      <th>Dataset</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>65</td>\n","      <td>1</td>\n","      <td>0.7</td>\n","      <td>0.1</td>\n","      <td>187</td>\n","      <td>16</td>\n","      <td>18</td>\n","      <td>6.8</td>\n","      <td>3.3</td>\n","      <td>0.90</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>10.9</td>\n","      <td>5.5</td>\n","      <td>699</td>\n","      <td>64</td>\n","      <td>100</td>\n","      <td>7.5</td>\n","      <td>3.2</td>\n","      <td>0.74</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>7.3</td>\n","      <td>4.1</td>\n","      <td>490</td>\n","      <td>60</td>\n","      <td>68</td>\n","      <td>7.0</td>\n","      <td>3.3</td>\n","      <td>0.89</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>58</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.4</td>\n","      <td>182</td>\n","      <td>14</td>\n","      <td>20</td>\n","      <td>6.8</td>\n","      <td>3.4</td>\n","      <td>1.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>72</td>\n","      <td>0</td>\n","      <td>3.9</td>\n","      <td>2.0</td>\n","      <td>195</td>\n","      <td>27</td>\n","      <td>59</td>\n","      <td>7.3</td>\n","      <td>2.4</td>\n","      <td>0.40</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c1c3e07-81a4-414e-bd16-93b9b6ed8ef7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c1c3e07-81a4-414e-bd16-93b9b6ed8ef7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c1c3e07-81a4-414e-bd16-93b9b6ed8ef7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f71ffe7a-9a7d-4ba3-998a-66816f845026\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f71ffe7a-9a7d-4ba3-998a-66816f845026')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f71ffe7a-9a7d-4ba3-998a-66816f845026 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 579,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 4,\n        \"max\": 90,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          46,\n          23,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Bilirubin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.227716426969643,\n        \"min\": 0.4,\n        \"max\": 75.0,\n        \"num_unique_values\": 113,\n        \"samples\": [\n          4.9,\n          3.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Direct_Bilirubin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8164986099097193,\n        \"min\": 0.1,\n        \"max\": 19.7,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          6.2,\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alkaline_Phosphotase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243,\n        \"min\": 63,\n        \"max\": 2110,\n        \"num_unique_values\": 262,\n        \"samples\": [\n          768,\n          1550\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alamine_Aminotransferase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 183,\n        \"min\": 10,\n        \"max\": 2000,\n        \"num_unique_values\": 152,\n        \"samples\": [\n          2000,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Aspartate_Aminotransferase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 289,\n        \"min\": 10,\n        \"max\": 4929,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          66,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Protiens\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0846410766640568,\n        \"min\": 2.7,\n        \"max\": 9.6,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          6.8,\n          6.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Albumin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7944347108052413,\n        \"min\": 0.9,\n        \"max\": 5.5,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          2.0,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Albumin_and_Globulin_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3195921076723706,\n        \"min\": 0.3,\n        \"max\": 2.8,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          1.6,\n          0.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["X = df.drop(columns =['Total_Bilirubin'])\n","Y = df['Total_Bilirubin']\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2)\n","\n","model=LinearRegression()\n","model.fit(X_train,Y_train)\n","\n","Y_pred = model.predict(X_test)\n","plt.plot(X_test,Y_pred,color='red')\n","plt.xlabel('X')\n","plt.ylabel('Y')\n","plt.title('LIVER DATASET')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"c96r-uxPviro","executionInfo":{"status":"ok","timestamp":1714811715733,"user_tz":-330,"elapsed":1354,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"55d218ab-0f83-4eaa-d049-8fa625c4bbfe"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mse= mean_squared_error(Y_test,Y_pred)\n","print(\"Mean Square Error:\",mse)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MQKHPRJlvot2","executionInfo":{"status":"ok","timestamp":1714811738714,"user_tz":-330,"elapsed":360,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"0cdb4afd-5423-4e98-81bb-dafa45f68d63"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Square Error: 1.699824251733505\n"]}]},{"cell_type":"code","source":["\n","r2= r2_score(Y_test,Y_pred)\n","print(\"R-Squared:\", r2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MFFGoK0FvtNP","executionInfo":{"status":"ok","timestamp":1714811771553,"user_tz":-330,"elapsed":376,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}},"outputId":"3c7e5268-ddc2-4619-faa3-6366de56c647"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["R-Squared: 0.9356450873679846\n"]}]},{"cell_type":"code","source":["with open(\"liverdataset.pkl\",\"wb\") as f:\n","  pickle.dump(model,f)"],"metadata":{"id":"Mmea_KIFv1JD","executionInfo":{"status":"ok","timestamp":1714811865556,"user_tz":-330,"elapsed":363,"user":{"displayName":"THOMAS EPSIBA","userId":"14320945167642300502"}}},"execution_count":21,"outputs":[]}]}